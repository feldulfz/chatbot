var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AiService.html",[0,0.801,1,0.652]],["body/injectables/AiService.html",[0,0.668,1,0.544,2,1.213,3,0.507,4,0.507,5,0.668,6,1.955,7,0.616,8,0.339,9,0.544,10,2.022,11,1.512,12,1.512,13,1.808,14,2.022,15,1.512,16,2.208,17,1.208,18,1.73,19,1.73,20,1.238,21,1.501,22,1.946,23,2.337,24,1.213,25,1.73,26,0.078,27,1.363,28,1.213,29,1.208,30,1.913,31,1.213,32,1.501,33,1.208,34,0.853,35,1.501,36,1.208,37,0.989,38,1.208,39,1.213,40,1.865,41,1.655,42,1.655,43,1.238,44,1.238,45,1.238,46,1.213,47,1.208,48,1.213,49,1.73,50,1.213,51,1.213,52,0.989,53,1.213,54,1.238,55,1.213,56,0.814,57,0.417,58,0.814,59,0.753,60,1.019,61,0.668,62,1.119,63,1.894,64,1.166,65,1.417,66,1.512,67,1.894,68,1.551,69,0.507,70,0.753,71,0.616,72,0.507,73,0.753,74,0.753,75,0.753,76,0.753,77,0.753,78,1.417,79,0.753,80,0.753,81,1.208,82,1.208,83,0.753,84,0.753,85,0.753,86,1.208,87,0.753,88,0.753,89,0.753,90,0.616,91,1.238,92,1.238,93,0.616,94,0.989,95,1.551,96,0.616,97,0.616,98,0.616,99,0.616,100,0.616,101,0.616,102,0.616,103,0.616,104,0.616,105,0.616,106,0.616,107,0.616,108,0.616,109,0.616,110,1.551,111,0.616,112,0.753,113,0.507,114,1.865,115,1.208,116,1.208,117,0.753,118,1.208,119,0.753,120,1.208,121,1.208,122,0.753,123,1.208,124,0.753,125,0.753,126,0.753,127,1.208,128,0.753,129,0.753,130,0.753,131,1.208,132,1.512,133,1.238,134,0.753,135,0.753,136,0.753,137,0.753,138,0.753,139,0.753,140,0.753,141,0.753,142,0.753,143,0.753,144,0.753,145,0.753,146,0.753,147,0.753,148,0.753,149,0.753,150,0.753,151,1.208,152,0.753,153,0.753,154,0.753,155,0.989,156,0.753,157,0.753,158,1.512,159,0.753,160,0.753,161,0.753,162,0.753,163,0.753,164,1.208,165,0.753,166,0.753,167,0.753,168,0.753,169,0.753,170,0.753,171,0.753,172,0.753,173,0.753,174,0.753,175,0.032,176,0.032]],["title/components/AppComponent.html",[177,0.976,178,1.185]],["body/components/AppComponent.html",[1,0.965,3,0.763,4,0.763,5,0.627,8,0.51,9,0.744,13,1.866,17,1.652,23,2.143,25,1.133,26,0.077,27,0.763,30,1.352,33,1.652,34,0.744,40,0.927,41,1.596,42,1.596,56,1.444,57,0.627,60,0.763,64,0.763,65,1.352,71,1.352,72,0.763,90,0.927,91,1.352,92,1.352,93,0.927,94,0.927,95,1.866,96,0.927,97,0.927,98,0.927,99,0.927,100,0.927,101,0.927,102,0.927,103,0.927,104,0.927,105,0.927,106,0.927,107,0.927,108,0.927,109,0.927,110,0.927,111,0.927,113,0.763,155,1.352,175,0.043,176,0.043,177,1.314,178,1.755,179,1.652,180,1.408,181,1.825,182,1.408,183,1.408,184,1.408,185,1.408,186,2.663,187,2.956,188,2.053,189,2.423,190,1.755,191,2.662,192,3.142,193,2.053,194,2.662,195,3.671,196,3.671,197,3.453,198,1.825,199,2.053,200,1.825,201,2.662,202,3.453,203,2.662,204,2.662,205,1.825,206,1.825,207,1.408,208,1.133,209,1.825,210,1.408,211,1.408,212,1.825,213,2.053,214,2.662,215,1.825,216,1.825,217,1.825,218,2.662,219,2.662,220,1.825,221,1.825,222,1.825,223,1.825,224,1.825,225,1.825,226,1.825,227,1.408,228,2.053,229,2.053,230,1.408,231,2.663,232,1.408,233,1.408,234,1.408,235,1.408]],["title/components/ChatComponent.html",[177,0.976,190,1.185]],["body/components/ChatComponent.html",[1,0.887,3,0.644,4,0.644,5,0.529,8,0.431,9,0.656,17,1.456,20,1.444,21,2.449,23,2.323,25,1.763,26,0.078,27,1.328,32,1.188,33,1.763,34,0.431,35,1.188,37,1.192,41,1.614,42,1.614,52,1.192,54,1.614,56,1.328,57,0.529,60,0.644,62,1.091,64,0.981,68,1.192,72,0.644,113,1.188,114,0.783,133,0.783,175,0.038,176,0.038,177,1.188,178,0.783,179,1.456,180,1.188,182,1.188,183,1.188,185,1.188,186,2.449,187,2.449,188,1.809,189,2.191,190,1.614,193,1.809,199,1.809,207,1.188,208,0.956,210,1.188,211,1.188,213,1.188,227,1.188,228,1.809,229,1.809,230,1.188,231,2.449,232,1.188,233,1.188,234,1.188,235,1.188,236,1.188,237,2.841,238,2.346,239,2.346,240,2.346,241,3.417,242,2.841,243,2.841,244,2.346,245,3.176,246,2.346,247,2.841,248,1.541,249,1.541,250,1.541,251,1.541,252,1.541,253,1.541,254,3.176,255,2.841,256,2.841,257,2.346,258,1.541,259,1.541,260,1.188,261,1.541,262,2.841,263,1.541,264,1.541,265,1.541,266,1.541,267,1.541,268,1.541,269,1.541,270,1.541,271,1.541,272,1.541,273,3.6,274,3.6,275,2.346,276,2.346,277,3.176,278,2.346,279,2.346,280,2.346,281,2.346,282,3.176,283,2.346]],["title/interfaces/ChatContext.html",[61,0.801,69,0.976]],["body/interfaces/ChatContext.html",[0,0.763,1,0.401,3,0.6,4,0.6,5,0.763,6,0.729,7,0.729,8,0.401,9,0.62,10,1.378,11,0.89,12,0.89,13,1.778,14,1.898,15,0.89,16,2.172,18,0.89,19,0.89,20,0.729,26,0.078,27,1.136,29,0.89,30,1.778,34,0.759,36,0.89,37,0.729,38,0.89,40,2.046,43,1.128,44,1.128,45,1.128,47,0.89,49,1.378,52,0.729,54,1.128,56,0.929,57,0.493,58,0.929,59,0.89,60,1.136,61,0.763,62,1.202,63,2.053,64,1.279,65,1.554,66,1.686,67,2.34,68,1.854,69,0.929,70,0.89,71,0.729,72,0.6,73,0.89,74,0.89,75,0.89,76,0.89,77,0.89,78,1.554,79,0.89,80,0.89,81,1.378,82,1.378,83,0.89,84,0.89,85,0.89,86,1.378,87,0.89,88,0.89,89,0.89,90,0.729,91,1.38,92,1.38,93,0.729,94,1.128,95,1.681,96,0.729,97,0.729,98,0.729,99,0.729,100,0.729,101,0.729,102,0.729,103,0.729,104,0.729,105,0.729,106,0.729,107,0.729,108,0.729,109,0.729,110,1.681,111,0.729,112,0.89,113,0.6,114,1.967,115,1.378,116,1.378,117,0.89,118,1.378,119,0.89,120,1.378,121,1.378,122,0.89,123,1.378,124,0.89,125,0.89,126,0.89,127,1.378,128,0.89,129,0.89,130,0.89,131,1.378,132,1.686,133,1.38,134,0.89,135,0.89,136,0.89,137,0.89,138,0.89,139,0.89,140,0.89,141,0.89,142,0.89,143,0.89,144,0.89,145,0.89,146,0.89,147,0.89,148,0.89,149,0.89,150,0.89,151,1.378,152,0.89,153,0.89,154,0.89,155,1.128,156,0.89,157,0.89,158,1.686,159,0.89,160,0.89,161,0.89,162,0.89,163,0.89,164,1.378,165,0.89,166,0.89,167,0.89,168,0.89,169,0.89,170,0.89,171,0.89,172,0.89,173,0.89,174,0.89,175,0.036,176,0.036,284,0.89]],["title/interfaces/Message.html",[61,0.801,62,0.801]],["body/interfaces/Message.html",[0,0.748,1,0.391,3,0.585,4,0.585,5,0.748,6,0.711,7,0.711,8,0.391,9,0.609,10,1.352,11,0.868,12,0.868,13,1.76,14,1.873,15,0.868,16,2.15,18,0.868,19,0.868,20,0.711,26,0.078,27,1.119,29,0.868,30,1.76,34,0.843,36,0.868,37,0.711,38,0.868,40,2.033,43,1.107,44,1.107,45,1.107,47,0.868,49,1.352,52,0.711,54,1.107,56,0.911,57,0.481,58,0.911,59,0.868,60,1.119,61,0.748,62,1.242,63,2.321,64,1.449,65,1.76,66,2.03,67,2.321,68,1.837,69,0.585,70,0.868,71,0.711,72,0.585,73,0.868,74,0.868,75,0.868,76,0.868,77,0.868,78,1.534,79,0.868,80,0.868,81,1.352,82,1.352,83,0.868,84,0.868,85,0.868,86,1.352,87,0.868,88,0.868,89,0.868,90,0.711,91,1.359,92,1.359,93,0.711,94,1.107,95,1.662,96,0.711,97,0.711,98,0.711,99,0.711,100,0.711,101,0.711,102,0.711,103,0.711,104,0.711,105,0.711,106,0.711,107,0.711,108,0.711,109,0.711,110,1.662,111,0.711,112,0.868,113,0.585,114,1.952,115,1.352,116,1.352,117,0.868,118,1.352,119,0.868,120,1.352,121,1.352,122,0.868,123,1.352,124,0.868,125,0.868,126,0.868,127,1.352,128,0.868,129,0.868,130,0.868,131,1.352,132,1.66,133,1.359,134,0.868,135,0.868,136,0.868,137,0.868,138,0.868,139,0.868,140,0.868,141,0.868,142,0.868,143,0.868,144,0.868,145,0.868,146,0.868,147,0.868,148,0.868,149,0.868,150,0.868,151,1.352,152,0.868,153,0.868,154,0.868,155,1.107,156,0.868,157,0.868,158,1.66,159,0.868,160,0.868,161,0.868,162,0.868,163,0.868,164,1.352,165,0.868,166,0.868,167,0.868,168,0.868,169,0.868,170,0.868,171,0.868,172,0.868,173,0.868,174,0.868,175,0.035,176,0.035,284,0.868]],["title/coverage.html",[285,2.44]],["body/coverage.html",[0,0.984,1,0.8,5,0.984,6,2.016,7,2.016,26,0.075,34,0.8,58,1.514,61,1.243,62,0.984,69,1.198,78,1.455,175,0.059,176,0.059,177,1.514,178,1.455,184,2.209,190,1.455,236,2.209,285,2.209,286,2.864,287,2.864,288,2.864,289,3.511,290,2.864,291,2.209,292,4.168,293,2.209,294,4.168,295,2.209,296,1.455,297,2.864,298,2.864,299,2.864,300,2.864,301,2.209,302,2.209,303,2.864,304,2.864]],["title/dependencies.html",[305,1.51,306,2.159]],["body/dependencies.html",[26,0.077,57,1.102,175,0.063,176,0.063,208,1.992,260,2.475,306,2.475,307,4.567,308,3.209,309,3.883,310,3.883,311,3.209,312,3.209,313,3.209,314,3.209,315,3.209,316,3.209,317,3.209,318,3.209]],["title/index.html",[8,0.652,319,2.332]],["body/index.html",[26,0.069,175,0.069,176,0.069]],["title/modules.html",[320,2.44]],["body/modules.html",[26,0.068,175,0.068,176,0.068,320,2.827]],["title/overview.html",[321,2.44]],["body/overview.html",[0,1.222,26,0.067,175,0.067,176,0.067,179,2.209,284,2.209,289,2.745,321,2.745,322,4.128,323,3.559]],["title/properties.html",[9,0.782,305,1.51]],["body/properties.html",[9,1.011,26,0.071,175,0.068,176,0.068,324,3.619,325,3.619]],["title/routes.html",[296,1.607]],["body/routes.html",[26,0.068,175,0.068,176,0.068,296,1.863]],["title/miscellaneous/variables.html",[326,1.51,327,2.159]],["body/miscellaneous/variables.html",[8,0.795,26,0.077,34,1.162,41,2.113,42,2.113,43,1.831,44,1.831,45,1.831,58,1.739,175,0.059,176,0.059,291,2.194,293,2.779,295,2.194,296,2.01,301,2.194,302,2.194,326,2.194,327,2.194,328,2.844,329,2.844,330,2.844,331,2.844,332,2.844,333,2.844,334,2.844,335,2.844,336,3.603,337,2.844,338,3.603,339,3.603,340,3.603,341,2.844]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":289,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["0.0.0",{"_index":325,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["0528",{"_index":145,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["1",{"_index":323,"title":{},"body":{"overview.html":{}}}],["19.2.0",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["1rem",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":322,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["7.8.0",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["8b:free",{"_index":147,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["actual_component",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["add",{"_index":112,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["ai",{"_index":155,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["aiservice",{"_index":1,"title":{"injectables/AiService.html":{}},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"coverage.html":{}}}],["aiservice.error",{"_index":282,"title":{},"body":{"components/ChatComponent.html":{}}}],["aiservice.isloading",{"_index":281,"title":{},"body":{"components/ChatComponent.html":{}}}],["aiservice.messages",{"_index":275,"title":{},"body":{"components/ChatComponent.html":{}}}],["align",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/common",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":57,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":260,"title":{},"body":{"components/ChatComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["another",{"_index":97,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["answer",{"_index":91,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["anthropic",{"_index":85,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["anthropicapikey",{"_index":340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":86,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["api/v1/chat/completions",{"_index":47,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["apikey",{"_index":11,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["apimessages",{"_index":127,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["apiurl",{"_index":12,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["app",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["app.component.html",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":178,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":293,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":139,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["applicationconfig",{"_index":332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asks",{"_index":107,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["assistant",{"_index":65,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["assistantmessage",{"_index":164,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["async",{"_index":20,"title":{},"body":{"injectables/AiService.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["await",{"_index":133,"title":{},"body":{"injectables/AiService.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["away",{"_index":106,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["background",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["based",{"_index":125,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["body",{"_index":140,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["bot",{"_index":274,"title":{},"body":{"components/ChatComponent.html":{}}}],["browser",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["button",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["cat",{"_index":95,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["catch",{"_index":165,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["center",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["changes",{"_index":80,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["chased",{"_index":96,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["chat",{"_index":113,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["chat.component.html",{"_index":238,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat.component.scss",{"_index":240,"title":{},"body":{"components/ChatComponent.html":{}}}],["chatbot",{"_index":90,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["chatcomponent",{"_index":190,"title":{"components/ChatComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"coverage.html":{}}}],["chatcontext",{"_index":69,"title":{"interfaces/ChatContext.html":{}},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"coverage.html":{}}}],["check",{"_index":261,"title":{},"body":{"components/ChatComponent.html":{}}}],["class",{"_index":72,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["claude",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["clear",{"_index":79,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["clearchat",{"_index":18,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["clearcontext",{"_index":19,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["color",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["commonmodule",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["component",{"_index":177,"title":{"components/AppComponent.html":{},"components/ChatComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["components",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"overview.html":{}}}],["components/chat/chat.component",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["computed",{"_index":254,"title":{},"body":{"components/ChatComponent.html":{}}}],["configure",{"_index":84,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["console.log(\"ai",{"_index":163,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["console.log(\"raw",{"_index":159,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["console.log(response",{"_index":148,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["const",{"_index":114,"title":{},"body":{"injectables/AiService.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["content",{"_index":40,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["context",{"_index":13,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["context:\\n\\n${this.context()?.content",{"_index":126,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["coverage",{"_index":285,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["data",{"_index":158,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["data.choices?.[0]?.message?.content",{"_index":161,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["date",{"_index":68,"title":{},"body":{"injectables/AiService.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["deepseek/deepseek",{"_index":143,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["default",{"_index":41,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["dependencies",{"_index":306,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["directive",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["directives",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["disabled",{"_index":263,"title":{},"body":{"components/ChatComponent.html":{}}}],["documentation",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["dynamic",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["e3547af831c90b00e73c28335c36a863dc93b31be4d8eedb81749e5f47145a55",{"_index":45,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["enter",{"_index":267,"title":{},"body":{"components/ChatComponent.html":{}}}],["environment",{"_index":58,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":59,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["error",{"_index":14,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["error(errordata.error?.message",{"_index":153,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["error.message",{"_index":168,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["errordata",{"_index":150,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["event",{"_index":249,"title":{},"body":{"components/ChatComponent.html":{}}}],["event.key",{"_index":266,"title":{},"body":{"components/ChatComponent.html":{}}}],["event.preventdefault",{"_index":269,"title":{},"body":{"components/ChatComponent.html":{}}}],["event.shiftkey",{"_index":268,"title":{},"body":{"components/ChatComponent.html":{}}}],["eventcoalescing",{"_index":335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":60,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["extract",{"_index":160,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["failed",{"_index":154,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["false",{"_index":341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fence",{"_index":101,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["fetch",{"_index":134,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"coverage.html":{}}}],["finally",{"_index":171,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["following",{"_index":94,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["formsmodule",{"_index":237,"title":{},"body":{"components/ChatComponent.html":{}}}],["fourth",{"_index":102,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["given",{"_index":111,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["handlekeypress",{"_index":244,"title":{},"body":{"components/ChatComponent.html":{}}}],["handlekeypress(event",{"_index":246,"title":{},"body":{"components/ChatComponent.html":{}}}],["header",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["headers",{"_index":138,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["helpful",{"_index":123,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["html",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["identifier",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":56,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["imports",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["initialize",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["inject",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["inject(aiservice",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AiService.html":{}},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AiService.html":{}}}],["instanceof",{"_index":167,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["interface",{"_index":61,"title":{"interfaces/ChatContext.html":{},"interfaces/Message.html":{}},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"coverage.html":{}}}],["interfaces",{"_index":284,"title":{},"body":{"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"overview.html":{}}}],["isloading",{"_index":15,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["isopen",{"_index":241,"title":{},"body":{"components/ChatComponent.html":{}}}],["issenddisabled",{"_index":242,"title":{},"body":{"components/ChatComponent.html":{}}}],["json",{"_index":157,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["json.stringify",{"_index":141,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["key",{"_index":87,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["keyboardevent",{"_index":247,"title":{},"body":{"components/ChatComponent.html":{}}}],["last",{"_index":104,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["legend",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["management",{"_index":76,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["matching",{"_index":176,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":62,"title":{"interfaces/Message.html":{}},"body":{"injectables/AiService.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"coverage.html":{}}}],["message.content",{"_index":280,"title":{},"body":{"components/ChatComponent.html":{}}}],["message.role",{"_index":278,"title":{},"body":{"components/ChatComponent.html":{}}}],["message.timestamp",{"_index":277,"title":{},"body":{"components/ChatComponent.html":{}}}],["messages",{"_index":16,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["metadata",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["method",{"_index":136,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["methods",{"_index":17,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["miscellaneous",{"_index":326,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":142,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["modules",{"_index":320,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["msg.content",{"_index":130,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["msg.role",{"_index":129,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["name",{"_index":33,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["new",{"_index":78,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"coverage.html":{}}}],["newusermessage",{"_index":115,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["object",{"_index":338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["occurred",{"_index":170,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["open",{"_index":272,"title":{},"body":{"components/ChatComponent.html":{}}}],["optional",{"_index":35,"title":{},"body":{"injectables/AiService.html":{},"components/ChatComponent.html":{}}}],["overview",{"_index":321,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":305,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"injectables/AiService.html":{},"components/ChatComponent.html":{}}}],["parse",{"_index":156,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["please",{"_index":124,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["porfolio",{"_index":273,"title":{},"body":{"components/ChatComponent.html":{}}}],["post",{"_index":137,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["pounced",{"_index":103,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["powered",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["prepare",{"_index":120,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["private",{"_index":10,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["production",{"_index":339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":37,"title":{},"body":{"injectables/AiService.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"properties.html":{}}}],["providedin",{"_index":70,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["providerouter(routes",{"_index":337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["questions",{"_index":92,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["qwen3",{"_index":146,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["r1",{"_index":144,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["ran",{"_index":105,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["reactive",{"_index":74,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["readme",{"_index":319,"title":{"index.html":{}},"body":{}}],["received",{"_index":162,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["related",{"_index":109,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["reply",{"_index":110,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["response",{"_index":132,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["response.json",{"_index":151,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["response.ok",{"_index":149,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["results",{"_index":175,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":88,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["returns",{"_index":25,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["role",{"_index":63,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["root",{"_index":71,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["root'},{'name",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["routes",{"_index":296,"title":{"routes.html":{}},"body":{"coverage.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["selector",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["send",{"_index":262,"title":{},"body":{"components/ChatComponent.html":{}}}],["sendmessage",{"_index":21,"title":{},"body":{"injectables/AiService.html":{},"components/ChatComponent.html":{}}}],["sendmessage(usermessage",{"_index":29,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["serrvice/ai.service",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["serrvice/ai.service.ts",{"_index":7,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"coverage.html":{}}}],["serrvice/ai.service.ts:120",{"_index":24,"title":{},"body":{"injectables/AiService.html":{}}}],["serrvice/ai.service.ts:125",{"_index":28,"title":{},"body":{"injectables/AiService.html":{}}}],["serrvice/ai.service.ts:20",{"_index":46,"title":{},"body":{"injectables/AiService.html":{}}}],["serrvice/ai.service.ts:21",{"_index":48,"title":{},"body":{"injectables/AiService.html":{}}}],["serrvice/ai.service.ts:24",{"_index":55,"title":{},"body":{"injectables/AiService.html":{}}}],["serrvice/ai.service.ts:25",{"_index":50,"title":{},"body":{"injectables/AiService.html":{}}}],["serrvice/ai.service.ts:26",{"_index":53,"title":{},"body":{"injectables/AiService.html":{}}}],["serrvice/ai.service.ts:27",{"_index":51,"title":{},"body":{"injectables/AiService.html":{}}}],["serrvice/ai.service.ts:29",{"_index":39,"title":{},"body":{"injectables/AiService.html":{}}}],["serrvice/ai.service.ts:38",{"_index":31,"title":{},"body":{"injectables/AiService.html":{}}}],["services/ai",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["setcontext",{"_index":22,"title":{},"body":{"injectables/AiService.html":{}}}],["setcontext(content",{"_index":38,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["setthecontenxt",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["short",{"_index":279,"title":{},"body":{"components/ChatComponent.html":{}}}],["signal",{"_index":54,"title":{},"body":{"injectables/AiService.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["signal(false",{"_index":52,"title":{},"body":{"injectables/AiService.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["signal(null",{"_index":49,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["signals",{"_index":73,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["sk",{"_index":43,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["smart_toy",{"_index":283,"title":{},"body":{"components/ChatComponent.html":{}}}],["something",{"_index":108,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["sonnet",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["src/.../app.config.ts",{"_index":328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.ts",{"_index":331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.production.ts",{"_index":329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":291,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":295,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/chat/chat.component.ts",{"_index":236,"title":{},"body":{"components/ChatComponent.html":{},"coverage.html":{}}}],["src/app/components/chat/chat.component.ts:13",{"_index":259,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:14",{"_index":253,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:16",{"_index":252,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:19",{"_index":258,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:26",{"_index":250,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:34",{"_index":248,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:41",{"_index":251,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/services/ai",{"_index":6,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"coverage.html":{}}}],["src/environments/environment.production.ts",{"_index":301,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":302,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["state",{"_index":75,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["statements",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":30,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["styles",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["styles/variables",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurl",{"_index":239,"title":{},"body":{"components/ChatComponent.html":{}}}],["styleurls",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["subtitle",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["system",{"_index":66,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["systemmessage",{"_index":131,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["systemmessagetemp",{"_index":121,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["table",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["templateurl",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["text",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["third",{"_index":99,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["this.aiservice.context",{"_index":257,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.aiservice.isloading",{"_index":256,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.aiservice.sendmessage(message",{"_index":265,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.aiservice.setcontext('you",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["this.apikey",{"_index":82,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["this.apiurl",{"_index":135,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["this.clearchat",{"_index":174,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["this.context",{"_index":122,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["this.context.set",{"_index":77,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["this.context.set(null",{"_index":173,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["this.error.set('please",{"_index":83,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["this.error.set(error",{"_index":166,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["this.error.set(null",{"_index":118,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["this.isloading.set(false",{"_index":172,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["this.isloading.set(true",{"_index":117,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["this.isopen.update(open",{"_index":271,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.messages().map(msg",{"_index":128,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["this.messages.set",{"_index":81,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["this.messages.update(messages",{"_index":116,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["this.sendmessage",{"_index":270,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.setcontext('you",{"_index":89,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["this.userinput().trim",{"_index":255,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.userinput.set",{"_index":264,"title":{},"body":{"components/ChatComponent.html":{}}}],["throw",{"_index":152,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["timestamp",{"_index":67,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["title",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["togglechat",{"_index":245,"title":{},"body":{"components/ChatComponent.html":{}}}],["track",{"_index":276,"title":{},"body":{"components/ChatComponent.html":{}}}],["tree",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["true",{"_index":336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["try",{"_index":119,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["tslib",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":34,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unexpected",{"_index":169,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["use",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["user",{"_index":64,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["userinput",{"_index":243,"title":{},"body":{"components/ChatComponent.html":{}}}],["usermessage",{"_index":36,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["using",{"_index":93,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["v1",{"_index":44,"title":{},"body":{"injectables/AiService.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":42,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["variable",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":327,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variables.$background",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["version",{"_index":324,"title":{},"body":{"properties.html":{}}}],["void",{"_index":27,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["watched",{"_index":100,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["white",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["yard",{"_index":98,"title":{},"body":{"injectables/AiService.html":{},"components/AppComponent.html":{},"interfaces/ChatContext.html":{},"interfaces/Message.html":{}}}],["zone.js",{"_index":317,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AiService.html":{"url":"injectables/AiService.html","title":"injectable - AiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  AiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/ai-serrvice/ai.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiKey\n                            \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                context\n                            \n                            \n                                error\n                            \n                            \n                                isLoading\n                            \n                            \n                                messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearChat\n                            \n                            \n                                clearContext\n                            \n                            \n                                    Async\n                                sendMessage\n                            \n                            \n                                setContext\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearChat\n                        \n                    \n                \n            \n            \n                \nclearChat()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ai-serrvice/ai.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearContext\n                        \n                    \n                \n            \n            \n                \nclearContext()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ai-serrvice/ai.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMessage(userMessage: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ai-serrvice/ai.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userMessage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setContext\n                        \n                    \n                \n            \n            \n                \nsetContext(content: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ai-serrvice/ai.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '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'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ai-serrvice/ai.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api/v1/chat/completions'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ai-serrvice/ai.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ai-serrvice/ai.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ai-serrvice/ai.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ai-serrvice/ai.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ai-serrvice/ai.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\nimport { environment } from '../../../environments/environment';\n\nexport interface Message {\n  role: 'user' | 'assistant' | 'system';\n  content: string;\n  timestamp: Date;\n}\n\nexport interface ChatContext {\n  content: string;\n  timestamp: Date;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AiService {\n\n  private apiKey = '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';\n  private apiUrl = '/api/v1/chat/completions';\n\n  // Signals for reactive state management\n  messages = signal([]);\n  context = signal(null);\n  isLoading = signal(false);\n  error = signal(null);\n  \n  setContext(content: string): void {\n    this.context.set({\n      content,\n      timestamp: new Date()\n    });\n    // Clear messages when context changes\n    this.messages.set([]);\n  }\n\n  async sendMessage(userMessage: string): Promise {\n    if (!this.apiKey || this.apiKey !== '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') {\n      this.error.set('Please configure your Anthropic API key in the environment file');\n      return;\n    }    \n\n    // this.setContext('You are a chatbot that must ONLY answer questions using the following context: The cat chased another cat across the yard, while a third cat watched from the fence, and a fourth cat pounced as the last cat ran away. If the user asks something not related to this context, reply: \"I can only answer questions about the given context.\"');\n\n    // Add user message to the chat\n    const newUserMessage: Message = {\n      role: 'user',\n      content: userMessage,\n      timestamp: new Date()\n    };\n\n    this.messages.update(messages => [...messages, newUserMessage]);\n    this.isLoading.set(true);\n    this.error.set(null);\n\n    try {\n      // Prepare the system message with context\n      const systemMessageTemp = this.context()\n        ? `You are a helpful assistant. Please answer questions based on the following context:\\n\\n${this.context()?.content}`\n        : 'You are a helpful assistant.';\n\n      // Prepare messages for the API\n      const apiMessages = this.messages().map(msg => ({\n        role: msg.role,\n        content: msg.content\n      }));\n\n      const systemMessage = {\n        role: 'system',\n        content: systemMessageTemp,\n      };\n\n      const response = await fetch(\n        this.apiUrl,\n        {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            model: 'deepseek/deepseek-r1-0528-qwen3-8b:free',\n            messages: [\n              systemMessage, \n              ...apiMessages\n            ]            \n          }),\n        },\n      );\n\n      // console.log(response)\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error?.message || 'Failed to get response from ai');\n      }\n\n      // Parse the JSON\n      const data = await response.json();\n\n      // console.log(\"Raw data:\", data);\n\n      // Extract AI message\n      const reply = data.choices?.[0]?.message?.content || \"No response received\";\n      \n      // console.log(\"AI reply:\", reply);\n\n      const assistantMessage: Message = {\n        role: 'assistant',\n        content: reply,\n        timestamp: new Date()\n      };\n\n      this.messages.update(messages => [...messages, assistantMessage]);\n    } catch (error) {\n      this.error.set(error instanceof Error ? error.message : 'An unexpected error occurred');\n    } finally {\n      this.isLoading.set(false);\n    }\n  }\n\n  clearChat(): void {\n    this.messages.set([]);\n    this.error.set(null);\n  }\n\n  clearContext(): void {\n    this.context.set(null);\n    this.clearChat();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                                ChatComponent\n                \n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aiService\n                            \n                            \n                                subtitle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setTheContenxt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setTheContenxt\n                        \n                    \n                \n            \n            \n                \nsetTheContenxt()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aiService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AiService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subtitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Powered by Claude 4 Sonnet'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Claude AI Assistant'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChatComponent } from './components/chat/chat.component';\nimport { AiService } from './services/ai-serrvice/ai.service';\n\n@Component({\n  selector: 'app-root',\n  imports: [CommonModule, ChatComponent],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Claude AI Assistant';\n  subtitle = 'Powered by Claude 4 Sonnet';\n  \n  aiService = inject(AiService);\n  \n  setTheContenxt() {\n    this.aiService.setContext('You are a chatbot that must ONLY answer questions using the following context: The cat chased another cat across the yard, while a third cat watched from the fence, and a fourth cat pounced as the last cat ran away. If the user asks something not related to this context, reply: \"I can only answer questions about the given context.\"');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        🤖\n        {{ title }}\n      \n      {{ subtitle }}\n    \n  \n\n  \n    \n      \n      \n      \n\n      \n\n    \n  \n\n -->\n\n\n\n  \n  \n  \n    Button Initialize Context\n  \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @use '../styles/variables';\n\n.app-header {\n    padding: 1rem;\n    text-align: center;\n}\n\n.app-content {\n    padding: 1rem;\n    background-color: variables.$background-white;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    🤖        {{ title }}            {{ subtitle }}                                           -->          Button Initialize Context  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatComponent.html":{"url":"components/ChatComponent.html","title":"component - ChatComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ChatComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/chat/chat.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./chat.component.html\n            \n\n\n\n            \n                styleUrl\n                ./chat.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aiService\n                            \n                            \n                                isOpen\n                            \n                            \n                                isSendDisabled\n                            \n                            \n                                userInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleKeyPress\n                            \n                            \n                                    Async\n                                sendMessage\n                            \n                            \n                                toggleChat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleKeyPress\n                        \n                    \n                \n            \n            \n                \nhandleKeyPress(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/chat/chat.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/chat/chat.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleChat\n                        \n                    \n                \n            \n            \n                \ntoggleChat()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/chat/chat.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aiService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AiService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/chat/chat.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/chat/chat.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSendDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => \n    !this.userInput().trim() || \n    this.aiService.isLoading() ||\n    !this.aiService.context()\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/components/chat/chat.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInput\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/chat/chat.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, inject, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AiService } from '../../services/ai-serrvice/ai.service';\n\n@Component({\n  selector: 'app-chat',\n  imports: [CommonModule, FormsModule],\n  templateUrl: './chat.component.html',\n  styleUrl: './chat.component.scss'\n})\nexport class ChatComponent {\n  userInput = signal('');\n  isOpen = signal(false); \n\n  aiService = inject(AiService);\n\n  // Computed signal to check if send button should be disabled\n  isSendDisabled = computed(() => \n    !this.userInput().trim() || \n    this.aiService.isLoading() ||\n    !this.aiService.context()\n  );\n\n\n  async sendMessage(): Promise {\n    const message = this.userInput().trim();\n    if (message && !this.aiService.isLoading()) {\n      this.userInput.set('');\n      await this.aiService.sendMessage(message);\n    }\n  }\n\n  handleKeyPress(event: KeyboardEvent): void {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      this.sendMessage();\n    }\n  }\n\n  toggleChat(): void {\n    this.isOpen.update(open => !open);\n  }  \n}\n\n    \n\n    \n        @if (isOpen()) {\n  \n    \n      \n         Porfolio Bot\n      \n      ✕\n    \n\n    \n\n      \n        \n        @for (message of aiService.messages(); track message.timestamp) {\n          \n            \n              {{ message.role === 'user' ? 'You' : 'Porfolio Bot' }}\n              {{ message.timestamp | date: 'short' }}\n            \n            {{ message.content }}\n          \n        }\n        \n        @if (aiService.isLoading()) {\n          \n            \n              Porfolio Bot\n            \n            \n              \n              \n              \n            \n          \n        }\n        \n        @if (aiService.error()) {\n          \n            \n            {{ aiService.error() }}\n          \n        }\n      \n      \n      \n        \n        \n          \n          send\n                     \n        \n      \n    \n  \n}\n\n\n  \n  \n  smart_toy\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (isOpen()) {                     Porfolio Bot            ✕                              @for (message of aiService.messages(); track message.timestamp) {                                    {{ message.role === \\'user\\' ? \\'You\\' : \\'Porfolio Bot\\' }}              {{ message.timestamp | date: \\'short\\' }}                        {{ message.content }}                  }                @if (aiService.isLoading()) {                                    Porfolio Bot                                                                                                }                @if (aiService.error()) {                                  {{ aiService.error() }}                  }                                                      send                                         }      smart_toy    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatContext.html":{"url":"interfaces/ChatContext.html","title":"interface - ChatContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/ai-serrvice/ai.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\nimport { environment } from '../../../environments/environment';\n\nexport interface Message {\n  role: 'user' | 'assistant' | 'system';\n  content: string;\n  timestamp: Date;\n}\n\nexport interface ChatContext {\n  content: string;\n  timestamp: Date;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AiService {\n\n  private apiKey = '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';\n  private apiUrl = '/api/v1/chat/completions';\n\n  // Signals for reactive state management\n  messages = signal([]);\n  context = signal(null);\n  isLoading = signal(false);\n  error = signal(null);\n  \n  setContext(content: string): void {\n    this.context.set({\n      content,\n      timestamp: new Date()\n    });\n    // Clear messages when context changes\n    this.messages.set([]);\n  }\n\n  async sendMessage(userMessage: string): Promise {\n    if (!this.apiKey || this.apiKey !== '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') {\n      this.error.set('Please configure your Anthropic API key in the environment file');\n      return;\n    }    \n\n    // this.setContext('You are a chatbot that must ONLY answer questions using the following context: The cat chased another cat across the yard, while a third cat watched from the fence, and a fourth cat pounced as the last cat ran away. If the user asks something not related to this context, reply: \"I can only answer questions about the given context.\"');\n\n    // Add user message to the chat\n    const newUserMessage: Message = {\n      role: 'user',\n      content: userMessage,\n      timestamp: new Date()\n    };\n\n    this.messages.update(messages => [...messages, newUserMessage]);\n    this.isLoading.set(true);\n    this.error.set(null);\n\n    try {\n      // Prepare the system message with context\n      const systemMessageTemp = this.context()\n        ? `You are a helpful assistant. Please answer questions based on the following context:\\n\\n${this.context()?.content}`\n        : 'You are a helpful assistant.';\n\n      // Prepare messages for the API\n      const apiMessages = this.messages().map(msg => ({\n        role: msg.role,\n        content: msg.content\n      }));\n\n      const systemMessage = {\n        role: 'system',\n        content: systemMessageTemp,\n      };\n\n      const response = await fetch(\n        this.apiUrl,\n        {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            model: 'deepseek/deepseek-r1-0528-qwen3-8b:free',\n            messages: [\n              systemMessage, \n              ...apiMessages\n            ]            \n          }),\n        },\n      );\n\n      // console.log(response)\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error?.message || 'Failed to get response from ai');\n      }\n\n      // Parse the JSON\n      const data = await response.json();\n\n      // console.log(\"Raw data:\", data);\n\n      // Extract AI message\n      const reply = data.choices?.[0]?.message?.content || \"No response received\";\n      \n      // console.log(\"AI reply:\", reply);\n\n      const assistantMessage: Message = {\n        role: 'assistant',\n        content: reply,\n        timestamp: new Date()\n      };\n\n      this.messages.update(messages => [...messages, assistantMessage]);\n    } catch (error) {\n      this.error.set(error instanceof Error ? error.message : 'An unexpected error occurred');\n    } finally {\n      this.isLoading.set(false);\n    }\n  }\n\n  clearChat(): void {\n    this.messages.set([]);\n    this.error.set(null);\n  }\n\n  clearContext(): void {\n    this.context.set(null);\n    this.clearChat();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/ai-serrvice/ai.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"user\" | \"assistant\" | \"system\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"user\" | \"assistant\" | \"system\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\nimport { environment } from '../../../environments/environment';\n\nexport interface Message {\n  role: 'user' | 'assistant' | 'system';\n  content: string;\n  timestamp: Date;\n}\n\nexport interface ChatContext {\n  content: string;\n  timestamp: Date;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AiService {\n\n  private apiKey = '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';\n  private apiUrl = '/api/v1/chat/completions';\n\n  // Signals for reactive state management\n  messages = signal([]);\n  context = signal(null);\n  isLoading = signal(false);\n  error = signal(null);\n  \n  setContext(content: string): void {\n    this.context.set({\n      content,\n      timestamp: new Date()\n    });\n    // Clear messages when context changes\n    this.messages.set([]);\n  }\n\n  async sendMessage(userMessage: string): Promise {\n    if (!this.apiKey || this.apiKey !== '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') {\n      this.error.set('Please configure your Anthropic API key in the environment file');\n      return;\n    }    \n\n    // this.setContext('You are a chatbot that must ONLY answer questions using the following context: The cat chased another cat across the yard, while a third cat watched from the fence, and a fourth cat pounced as the last cat ran away. If the user asks something not related to this context, reply: \"I can only answer questions about the given context.\"');\n\n    // Add user message to the chat\n    const newUserMessage: Message = {\n      role: 'user',\n      content: userMessage,\n      timestamp: new Date()\n    };\n\n    this.messages.update(messages => [...messages, newUserMessage]);\n    this.isLoading.set(true);\n    this.error.set(null);\n\n    try {\n      // Prepare the system message with context\n      const systemMessageTemp = this.context()\n        ? `You are a helpful assistant. Please answer questions based on the following context:\\n\\n${this.context()?.content}`\n        : 'You are a helpful assistant.';\n\n      // Prepare messages for the API\n      const apiMessages = this.messages().map(msg => ({\n        role: msg.role,\n        content: msg.content\n      }));\n\n      const systemMessage = {\n        role: 'system',\n        content: systemMessageTemp,\n      };\n\n      const response = await fetch(\n        this.apiUrl,\n        {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            model: 'deepseek/deepseek-r1-0528-qwen3-8b:free',\n            messages: [\n              systemMessage, \n              ...apiMessages\n            ]            \n          }),\n        },\n      );\n\n      // console.log(response)\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error?.message || 'Failed to get response from ai');\n      }\n\n      // Parse the JSON\n      const data = await response.json();\n\n      // console.log(\"Raw data:\", data);\n\n      // Extract AI message\n      const reply = data.choices?.[0]?.message?.content || \"No response received\";\n      \n      // console.log(\"AI reply:\", reply);\n\n      const assistantMessage: Message = {\n        role: 'assistant',\n        content: reply,\n        timestamp: new Date()\n      };\n\n      this.messages.update(messages => [...messages, assistantMessage]);\n    } catch (error) {\n      this.error.set(error instanceof Error ? error.message : 'An unexpected error occurred');\n    } finally {\n      this.isLoading.set(false);\n    }\n  }\n\n  clearChat(): void {\n    this.messages.set([]);\n    this.error.set(null);\n  }\n\n  clearContext(): void {\n    this.context.set(null);\n    this.clearChat();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/components/chat/chat.component.ts\n            \n            component\n            ChatComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/services/ai-serrvice/ai.service.ts\n            \n            injectable\n            AiService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/app/services/ai-serrvice/ai.service.ts\n            \n            interface\n            ChatContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/services/ai-serrvice/ai.service.ts\n            \n            interface\n            Message\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/environments/environment.production.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            environment   (src/.../environment.production.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            routes   (src/.../app.routes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.production.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  anthropicApiKey: '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'\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  anthropicApiKey: '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'\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Routes\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
